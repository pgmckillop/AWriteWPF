//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AwriteTestBed
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class consoleEntities : DbContext
    {
        public consoleEntities()
            : base("name=consoleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AcademicLevel> AcademicLevels { get; set; }
        public virtual DbSet<Assessment> Assessments { get; set; }
        public virtual DbSet<AssessmentObjective> AssessmentObjectives { get; set; }
        public virtual DbSet<AssessmentTask> AssessmentTasks { get; set; }
        public virtual DbSet<AssessmentTaskCondition> AssessmentTaskConditions { get; set; }
        public virtual DbSet<AssessmentTopicRange> AssessmentTopicRanges { get; set; }
        public virtual DbSet<AssessmentType> AssessmentTypes { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<CourseUnit> CourseUnits { get; set; }
        public virtual DbSet<Curriculum> Curricula { get; set; }
        public virtual DbSet<LOTopic> LOTopics { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<QualificationPathway> QualificationPathways { get; set; }
        public virtual DbSet<QualUnit> QualUnits { get; set; }
        public virtual DbSet<SystemUser> SystemUsers { get; set; }
        public virtual DbSet<SystemUserType> SystemUserTypes { get; set; }
        public virtual DbSet<TaskAO> TaskAOs { get; set; }
        public virtual DbSet<TaskKeyword> TaskKeywords { get; set; }
        public virtual DbSet<TaskTopicRange> TaskTopicRanges { get; set; }
        public virtual DbSet<TopicKeyword> TopicKeywords { get; set; }
        public virtual DbSet<TopicTestingMethod> TopicTestingMethods { get; set; }
        public virtual DbSet<UnitLearningOutcome> UnitLearningOutcomes { get; set; }
        public virtual DbSet<UnitsAssessed> UnitsAssesseds { get; set; }
        public virtual DbSet<UnitStatu> UnitStatus { get; set; }
        public virtual DbSet<LookupID> LookupIDs { get; set; }
    
        public virtual ObjectResult<GetAcadLevelByID_Result> GetAcadLevelByID(Nullable<int> levelID)
        {
            var levelIDParameter = levelID.HasValue ?
                new ObjectParameter("LevelID", levelID) :
                new ObjectParameter("LevelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAcadLevelByID_Result>("GetAcadLevelByID", levelIDParameter);
        }
    
        public virtual ObjectResult<GetAllCourseUnits_Result> GetAllCourseUnits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCourseUnits_Result>("GetAllCourseUnits");
        }
    
        public virtual ObjectResult<GetCoursesByPathway_Result> GetCoursesByPathway(Nullable<int> idPathway)
        {
            var idPathwayParameter = idPathway.HasValue ?
                new ObjectParameter("idPathway", idPathway) :
                new ObjectParameter("idPathway", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCoursesByPathway_Result>("GetCoursesByPathway", idPathwayParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCourseUnitID(Nullable<int> courseID, string courseUnitTitle, ObjectParameter courseUnitID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("courseID", courseID) :
                new ObjectParameter("courseID", typeof(int));
    
            var courseUnitTitleParameter = courseUnitTitle != null ?
                new ObjectParameter("courseUnitTitle", courseUnitTitle) :
                new ObjectParameter("courseUnitTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCourseUnitID", courseIDParameter, courseUnitTitleParameter, courseUnitID);
        }
    
        public virtual ObjectResult<GetCourseUnitsByCourse_Result> GetCourseUnitsByCourse(Nullable<int> idCourse)
        {
            var idCourseParameter = idCourse.HasValue ?
                new ObjectParameter("idCourse", idCourse) :
                new ObjectParameter("idCourse", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseUnitsByCourse_Result>("GetCourseUnitsByCourse", idCourseParameter);
        }
    
        public virtual ObjectResult<GetCourseUnitsByCourseAllInfo_Result> GetCourseUnitsByCourseAllInfo(Nullable<int> idCourse)
        {
            var idCourseParameter = idCourse.HasValue ?
                new ObjectParameter("idCourse", idCourse) :
                new ObjectParameter("idCourse", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseUnitsByCourseAllInfo_Result>("GetCourseUnitsByCourseAllInfo", idCourseParameter);
        }
    
        public virtual ObjectResult<GetCurriculumByLevel_Result> GetCurriculumByLevel(Nullable<int> idAcadLevel)
        {
            var idAcadLevelParameter = idAcadLevel.HasValue ?
                new ObjectParameter("idAcadLevel", idAcadLevel) :
                new ObjectParameter("idAcadLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurriculumByLevel_Result>("GetCurriculumByLevel", idAcadLevelParameter);
        }
    
        public virtual ObjectResult<GetPathwaysByQualification_Result> GetPathwaysByQualification(Nullable<int> idQualification)
        {
            var idQualificationParameter = idQualification.HasValue ?
                new ObjectParameter("idQualification", idQualification) :
                new ObjectParameter("idQualification", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPathwaysByQualification_Result>("GetPathwaysByQualification", idQualificationParameter);
        }
    
        public virtual ObjectResult<GetQualificationByCurriculum_Result> GetQualificationByCurriculum(Nullable<int> idCurriculum)
        {
            var idCurriculumParameter = idCurriculum.HasValue ?
                new ObjectParameter("idCurriculum", idCurriculum) :
                new ObjectParameter("idCurriculum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQualificationByCurriculum_Result>("GetQualificationByCurriculum", idCurriculumParameter);
        }
    
        public virtual ObjectResult<GetSystemUserByLogin_Result> GetSystemUserByLogin(string systemUserLoginName)
        {
            var systemUserLoginNameParameter = systemUserLoginName != null ?
                new ObjectParameter("systemUserLoginName", systemUserLoginName) :
                new ObjectParameter("systemUserLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSystemUserByLogin_Result>("GetSystemUserByLogin", systemUserLoginNameParameter);
        }
    }
}
